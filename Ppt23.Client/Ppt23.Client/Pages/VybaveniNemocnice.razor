@page "/VybaveniNemocnice"

<div> pocet vybaveni @SeznamVybaveni.Count</div>

<button @onclick="noveVybaveniSeznam" class=" text-white bg-gradient-to-b from-cyan-300 to-sky-800 px-5 rounded-full">Generovat nové vybavení</button>
<button @onclick="() => {isInNewMode = true; newModel = new();}" class=" text-white bg-gradient-to-b from-cyan-300 to-sky-800 px-5 rounded-full">Nové vybavení</button>

<div class="grid grid-cols-6 border-b-2 border-black ">
    <div class=" w-full h-full">Název</div>
    <div class=" w-full h-full">Datum nákupu</div>
    <div class=" w-full h-full">Datum poslední revize</div>
    <div class=" w-full h-full">Potřebuje revizi?</div>
    <div class=" w-full h-full">Cena</div>
</div>

@if (isInNewMode)
{
    ArgumentNullException.ThrowIfNull(newModel);

            <VybaveRow IsInEditMode=true Vyb="newModel"
           EditDoneCallback="() => {SeznamVybaveni.Insert(0,newModel); isInNewMode = false;}"> 

                <div class="grid grid-cols-2 p-1">
                    <button type="submit" class=" text-white bg-gradient-to-b from-cyan-300 to-sky-800 px-5 rounded-full">Přidat</button>
                    <button type="button" @onclick="() => isInNewMode = false" class=" text-white bg-gradient-to-b from-cyan-300 to-sky-800 px-5 rounded-full">Odebrat</button>
                </div>
            </VybaveRow>
}

@foreach (var vyb in SeznamVybaveni)
{
        <VybaveRow Vyb="vyb"
       SmazEventCallback="() => SeznamVybaveni.Remove(vyb)"
       RevizeEventCallBack="() => vyb.LastRevision = DateTime.Now">
        </VybaveRow>
}


@code {
    List<VybaveniVM> SeznamVybaveni = new List<VybaveniVM>();
    VybaveniVM newModel = new VybaveniVM();
    bool isInNewMode;

    public void noveVybaveniSeznam()
    {
        SeznamVybaveni.Clear();
        SeznamVybaveni = VybaveniVM.VratRandSeznam();
    }

    protected override async Task OnInitializedAsync()
    {
        SeznamVybaveni.Clear();
        SeznamVybaveni = VybaveniVM.VratRandSeznam();
    }

}