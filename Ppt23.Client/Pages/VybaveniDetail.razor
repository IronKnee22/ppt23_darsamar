@page "/vybaveni/{Id:guid}"
@using Ppt.Shared;
@inject HttpClient Http

@if (vybaveniVM is null)
{
            <div class="absolute right-1/2 bottom-1/2  transform translate-x-1/2 translate-y-1/2 ">
                <div class=" border-t-transparent border-solid animate-spin  rounded-full border-cyan-600 border-8 h-16 w-16"></div>
            </div>
    return;
}

<div class="grid grid-row-6"> 
    <div><font size="+2">VybaveniDetail: </font></div>
    <div>Název: @vybaveniVM.Name</div>
    <div>Vybaveni id: @vybaveniVM.Id</div>
    <br/>
    <div><font size="+2">Revize k teré jsou známy k tomuto vybavení a jejich počet: @seznamRevizi.Count </font></div>
    @if(seznamRevizi.Count != 0)
    {
        
        @foreach (var item in seznamRevizi)
        {

            <div>Revize číslo @pocetrevizi: @item.DateTime.ToString("dd/MM/yyyy")</div>
            pocetrevizi++;
        }

        pocetrevizi = 1;

        <br/>
            <div><font size="+2">Pocet pouziti tohoto přístroje je @seznamUkonu.Count </font></div>

        <button class="rounded border-2 border-green-600 p-2" @onclick="() => NovyUkon()">Použít</button>

        @if(ukon==true)
        {
            <div class="grid grid-cols-4">

                <input @bind-value="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg"  />

                @(ukonyVM.Name = name)
                @(name = default)
                @(ukonyVM.RxecutionDate = DateTime.Now)
                <button @onclick="() =>PostUkon(vybaveniVM)" class=" bg-amber-500 twbtn">
                    Ok
                </button>
                <button @onclick="() => ukon = false" class="bg-gray-500 twbtn">
                    zruš
                </button>
            </div>
            
        }


        @foreach (var item in seznamUkonu)
        {
            
             <div class="grid grid-cols-2">
                <div>Název procedury: @item.Name </div> 
                <div>Kdy byla provedena @item.RxecutionDate</div>
            </div>
        }
    }
    else
    {
        <div>žádná revize</div>
    }


</div>

@code {
    VybaveniVM? vybaveniVM;
    [Parameter] public Guid Id { get; set; }
    List<RevizeVM>? seznamRevizi;
    List<UkonyVM>? seznamUkonu;
    UkonyVM ukonyVM = new UkonyVM();
    int pocetrevizi = 1;
    string name = default;
    bool ukon = false;


    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        vybaveniVM = await Http.GetFromJsonAsync<VybaveniVM>($"/vybaveni/{Id}");
        seznamRevizi = await Http.GetFromJsonAsync<List<RevizeVM>>($"/vybaveniinfo/{vybaveniVM.Id}");
        seznamUkonu = await Http.GetFromJsonAsync<List<UkonyVM>>($"/Ukunyinfo/{vybaveniVM.Id}");
    }

    public void NovyUkon()
    {
        ukon = true;
    }

    public async Task PostUkon(VybaveniVM vyb)
    {
        ukon = false;
        

        var id = vyb.Id;
        
        var response = await Http.PostAsJsonAsync<UkonyVM>($"vybaveniUkon/{id}", ukonyVM);
        seznamUkonu.Clear();
        seznamUkonu = await Http.GetFromJsonAsync<List<UkonyVM>>($"/Ukunyinfo/{vybaveniVM.Id}");

    }

}
